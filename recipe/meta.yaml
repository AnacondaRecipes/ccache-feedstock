# {% set name = "ccache" %}
# {% set version = "4.2" %}  # [not win]
# {% set fork = "ccache" %}  # [not win]
# {% set version = "4.2" %}  # [win]
# {% set fork = "cristianadam" %}  # [win]
{% set name = "ccache" %}
{% set version = "4.2" %}
{% set fork = "ccache" %}

{% set p = 'm2-' if win else '' %}
{% set n = 'm2w64-' if win else '' %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/{{ fork }}/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.gz
  sha256: dbf139ff32031b54cb47f2d7983269f328df14b5a427882f89f7721e5c411b7e

build:
  number: 0
  skip: true  # [win]

requirements:
  build:
    - gnuconfig  # [unix]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make
    # The test suite assumes GNU sed and find
    - sed
    - findutils  # [osx]
  host:
    - zstd

test:
  requires:
    - {{ compiler('c') }}
  commands:
    # 1. Tests that it runs at all
    - ccache --help
    - ccache --version
    # 1.1. We need to test both ccache and ccache.exe on Windows.
    - ccache.exe --help  # [win]
    - ccache.exe --version  # [win]
    # 2. Test finding and launching a C compiler:
    - ccache ${CC} --help  # [not win]
    - set CCACHE_DEBUG=1  # [win]
    # Using /? here fails
    # Using -? works, but pauses for pagination
    # .. hence the echo
    - echo | ccache cl.exe -? # [win]
    - echo | ccache cl -? # [win]
    # We could consider some tests to see that we actually cache compilations!

about:
  home: https://ccache.dev/
  license: GPL-3.0-only
  license_family: GPL
  license_file: GPL-3.0.txt
  summary: A compiler cache

  description: |
    ccache is a compiler cache. It speeds up recompilation by caching
    previous compilations and detecting when the same compilation is
    being done again. Supported languages are C, C++, Objective-C and Objective-C++.
  doc_url: https://ccache.dev/manual/latest.html
  dev_url: https://github.com/ccache/ccache

extra:
  recipe-maintainers:
    - edisongustavo
    - marcelotrevisani
    - mingwandroid
